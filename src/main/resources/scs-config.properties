# 1. DEFINE ONLY THE CONSUMER FUNCTION
# The producer (StreamBridge) doesn't need to be defined here. This property
# is for beans that Spring needs to wire up automatically as listeners/suppliers.
spring.cloud.function.definition=consumeFromScs
# 2. CONFIGURE THE CONSUMER BINDING
# This maps the 'consumeFromScs' function bean to its Kafka topic.
spring.cloud.stream.bindings.consumeFromScs-in-0.destination=scs-pv-topic
# Explicitly set a consumer group ID. Change this value to force reprocessing.
spring.cloud.stream.bindings.consumeFromScs-in-0.group=my-consumer-group
# Explicitly define the expected message format.
spring.cloud.stream.bindings.consumeFromScs-in-0.content-type=application/json
# This maps the name used in `streamBridge.send()` to its Kafka topic.
spring.cloud.stream.bindings.scsPvTopic-out-0.destination=scs-pv-topic
# Explicitly define the outgoing message format.
spring.cloud.stream.bindings.scsPvTopic-out-0.content-type=application/json
# 4. CONFIGURE KAFKA-SPECIFIC PROPERTIES
# **THIS IS CRITICAL FOR DEBUGGING**
# This tells your consumer to read all messages from the very beginning of the topic
# the first time it connects with a new group ID.
spring.cloud.stream.kafka.bindings.consumeFromScs-in-0.consumer.auto-offset-reset=earliest
spring.cloud.stream.kafka.binder.brokers=localhost:9092